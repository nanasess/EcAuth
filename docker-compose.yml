volumes:
  sql1data:
    driver: local

services:
  identityprovider:
    image: ${DOCKER_REGISTRY-}identityprovider
    build:
      context: .
      dockerfile: IdentityProvider/Dockerfile
    depends_on:
      - db
    environment:
      ConnectionStrings__EcAuthDbContext: "Server=${DB_HOST};Database=${DB_NAME};User Id=${DB_USER};Password=${DB_PASSWORD};TrustServerCertificate=true;MultipleActiveResultSets=true"
  db:
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: ${DB_PASSWORD}
    image: mcr.microsoft.com/mssql/server:2022-latest
    volumes:
      - sql1data:/var/opt/mssql
      - ./docker/db/backup:/var/opt/mssql/backup
    ports:
      - 1433:1433
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U ${DB_USER} -P '${DB_PASSWORD}' -Q 'SELECT 1' || exit 1"]
      interval: 10s
      retries: 10
      start_period: 10s
      timeout: 3s
    # volumes:

    #     - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    # command: /bin/bash -c "/opt/mssql/bin/sqlservr & sleep 30s & /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P '<YourStrong@Passw0rd>' -d master -i /docker-entrypoint-initdb.d/init.sql"

  # マイグレーション用のサービス
  # 事前に `dotnet ef migrations bundle -f --output publish/bundle` で bundle を作成しておく
  # migration:
  #   build:
  #     context: .
  #     dockerfile: IdentityProvider/Dockerfile
  #   depends_on:
  #     - db
  #   environment:
  #     ConnectionStrings__EcAuthDbContext: "Server=${DB_HOST};Database=${DB_NAME};User Id=${DB_USER};Password=${DB_PASSWORD};TrustServerCertificate=true;MultipleActiveResultSets=true"
